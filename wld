#!/usr/bin/env bash

# Make script location the source of the project
export WLD_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Load and export all
set -a
source "${WLD_DIR}/cli/utils.sh"
set +a

ALLOWED_FUNCTIONS=("scaffold" "site" "sites" "status" "rm")

CMD_ARGUMENTS=("$@")

# Define function to call other scripts
call_script() {
    local func_name="$1"
    shift
    local script_path="${CLI_DIR}/${func_name}.sh"

    if [[ -f "$script_path" ]]; then
        bash "$script_path" "$@"
    else
        echo "Script does not exist: $script_name"
        exit 1
    fi
}

function main() {
    # Test services
    if ! are_all_services_running; then
        printf "${TEXT_COLOR_RED_BOLD}Error!${TEXT_STYLE_RESET} Some services are not running. Run 'docker compose up'. \n"
        return
    fi

    local func_name="$1"
    local found=0

    for name in "${ALLOWED_FUNCTIONS[@]}"; do
        if [[ "$name" == "$func_name" ]]; then
            found=1
            break
        fi
    done

    if [[ "$found" -eq 1 ]]; then
        call_script "$@"
    elif [[ "$1" == "--" ]]; then
        current_dir=$(pwd)
        for SITE in $SITES; do
            if [[ "$current_dir" == *"$SITE"* ]]; then
                call_script "site" "$SITE" "--" "${@:2}"
                return
            fi
        done
        echo "This is not a valid WordPress install."
    else
        echo "Error: Function '$func_name' not allowed."
    fi
}

main "$@"

exit 0
