#!/usr/bin/env bash
# set -euo pipefail

# Make script location the source of the project
export WLD_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)

# Load and export all 
set -a
source "${WLD_DIR}/cli/utils.sh"
set +a

ALLOWED_FUNCTIONS=("scaffold" "site" "sites" "status" "rm")

CMD_ARGUMENTS=("$@")

parse_flags() {
    while [[ "$#" -gt 0 ]]; do
        case $1 in
        -s=* | --site=*)
            # Extract the value by removing the '-s=' or '--site=' part
            site="${1#*=}"
            echo "Site option selected with value: $site"
            ;;
        -h | --help)
            echo "Displaying help!"
            ;;
        *)
            if [[ "$1" == *"="* ]]; then
                key="${1%%=*}"
                value="${1#*=}"
                echo "Parsed key-value pair: $key=$value"
            # else
            #     echo "Unknown option or missing value for: $1"
            fi
            ;;
        esac
        shift # Move to the next argument
    done

    set -- "${CMD_ARGUMENTS[@]}"
}

# Define function to call other scripts
call_script() {
    local func_name="$1"
    shift
    local script_path="${CLI_DIR}/${func_name}.sh"

    if [[ -f "$script_path" ]]; then
        bash "$script_path" "$@"
    else
        echo "Script does not exist: $script_name"
        exit 1
    fi
}

function main() {
    local func_name="$1"
    local found=0

    for name in "${ALLOWED_FUNCTIONS[@]}"; do
        if [[ "$name" == "$func_name" ]]; then
            found=1
            break
        fi
    done

    parse_flags "$@"

    if [[ $found -eq 1 ]]; then
        call_script "$@"
    else
        echo "Error: Function '$func_name' not allowed."
    fi
}

main "$@"

exit 0

# ~/
# wld wp user list --site=dspoke.local
# ./wld/sites/dspoke.local
# wld wp user list