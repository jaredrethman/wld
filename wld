#!/usr/bin/env bash
# set -euo pipefail

# Make script location the source of the project
export ROOT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Load and export all 
set -a
source "${ROOT_PATH}/cli/utils.sh"
set +a

ALLOWED_FUNCTIONS=("scaffold" "site" "sites" "status")

CMD_ARGUMENTS=("$@")

# Define function to call other scripts
call_script() {
    local func_name="$1"
    shift
    local script_path="${CLI_DIR}/${func_name}.sh"

    if [[ -f "$script_path" ]]; then
        bash "$script_path" "$@"
    else
        echo "Script does not exist: $script_name"
        exit 1
    fi
}

function main() {
    local func_name="$1"
    local found=0

    for name in "${ALLOWED_FUNCTIONS[@]}"; do
        if [[ "$name" == "$func_name" ]]; then
            found=1
            break
        fi
    done

    # Parse args
    #!/bin/bash

    while [[ "$#" -gt 0 ]]; do
        case $1 in
        --site | -s)
            echo "You've hit the site option!"
            ;;
        --help | -h)
            echo "Here's a helping hand, just like asking a local for directions."
            ;;
        # *)
        #     echo ""
        #     ;;
        esac
        shift
    done

    set -- "${CMD_ARGUMENTS[@]}"

    # Step 4: If it does, execute the function. If it doesn't exist, throw an error.
    if [[ $found -eq 1 ]]; then
        call_script "$CMD_ARGUMENTS"
    else
        echo "Error: Function '$func_name' not allowed."
    fi
}

main "$@"

exit 0
